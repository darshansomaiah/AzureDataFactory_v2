{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlTable_Source",
						"type": "DatasetReference"
					},
					"name": "sourceData"
				},
				{
					"dataset": {
						"referenceName": "LS_AzureSqlTable_Destination",
						"type": "DatasetReference"
					},
					"name": "DestinationData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "LS_AzureSqlTable_Destination",
						"type": "DatasetReference"
					},
					"name": "sinkData"
				}
			],
			"transformations": [
				{
					"name": "Existsornot1"
				}
			],
			"script": "source(output(\n\t\tKey as integer,\n\t\tName as string,\n\t\tPhone as string,\n\t\tLast_m as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceData\nsource(output(\n\t\tKey as integer,\n\t\tName as string,\n\t\tPhone as string,\n\t\tLast_m as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DestinationData\nsourceData, DestinationData exists(sourceData@Key == DestinationData@Key,\n\tnegate:true,\n\tbroadcast: 'auto')~> Existsornot1\nExistsornot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tKey as integer,\n\t\tName as string,\n\t\tPhone as string,\n\t\tLast_m as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkData"
		}
	}
}